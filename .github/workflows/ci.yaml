name: Python CI

on: 
  push:
  workflow_dispatch: # Manual trigger
    inputs:
      also-release:
        description: 'Run RELEASE if this attribute is `true`'     
        required: true
        default: 'false'

env:
  TERM: screen-256color

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # - os: ubuntu-latest
          #   pip_cache_path: ~/.cache/pip
          #   experimental: false
          - os: macos-latest
            pip_cache_path: ~/Library/Caches/pip
            experimental: false
          # - os: windows-latest
          #   pip_cache_path: ~\AppData\Local\pip\Cache
          #   experimental: true
    steps:
      - uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if conda.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir  # from: conda-incubator/setup-miniconda@v2
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('conda.yml') }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ matrix.pip_cache_path }}
          key: ${{ runner.os }}-pip--${{ env.CACHE_NUMBER }}-${{
            hashFiles('requirements.txt') }}


      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: fieldctl
          channel-priority: strict
          environment-file: conda.yml
          auto-activate-base: false
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
          auto-update-conda: true  # Required for windows for `use-only-tar-bz2`
      - name: Install dependencies
        run: |
          pip install .
      - name:  Build CLI
        shell: bash -l {0}
        run:   |
          make bin-build
          ./dist/cli --help
          mv ./dist/cli ./dist/fieldctl
      - name: zip the app for Mac
        shell: bash -l {0}
        if: matrix.os == 'macos-latest'
        run: zip -r dist/fieldctl.zip dist/fieldctl

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/fieldctl
          
      # - name:  Install project
      #   shell: bash -l {0}
      #   run:   |
      #          echo "test2" > test.txt
      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: test.txt
